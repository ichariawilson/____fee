// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Microsoft.Fee.Services.Scholarship.API.Infrastructure;

namespace Scholarship.API.Infrastructure.ScholarshipMigrations
{
    [DbContext(typeof(ScholarshipContext))]
    [Migration("20210326093541_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.HasSequence("scholarship_course_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("scholarship_currency_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("scholarship_duration_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("scholarship_educationlevel_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("scholarship_feestructure_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("scholarship_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("scholarship_interest_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("scholarship_location_hilo")
                .IncrementsBy(10);

            modelBuilder.HasSequence("scholarship_school_hilo")
                .IncrementsBy(10);

            modelBuilder.Entity("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseHiLo("scholarship_course_hilo");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ScholarshipDurationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScholarshipDurationId");

                    b.ToTable("ScholarshipCourse");
                });

            modelBuilder.Entity("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseHiLo("scholarship_currency_hilo");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.ToTable("ScholarshipCurrency");
                });

            modelBuilder.Entity("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipDuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseHiLo("scholarship_duration_hilo");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ScholarshipDuration");
                });

            modelBuilder.Entity("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipEducationLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseHiLo("scholarship_educationlevel_hilo");

                    b.Property<string>("EducationLevel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ScholarshipEducationLevel");
                });

            modelBuilder.Entity("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipFeeStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseHiLo("scholarship_feestructure_hilo");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ScholarshipCourseId")
                        .HasColumnType("int");

                    b.Property<int>("ScholarshipCurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("ScholarshipDurationId")
                        .HasColumnType("int");

                    b.Property<int>("ScholarshipEducationLevelId")
                        .HasColumnType("int");

                    b.Property<int>("ScholarshipSchoolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScholarshipCourseId");

                    b.HasIndex("ScholarshipCurrencyId");

                    b.HasIndex("ScholarshipDurationId");

                    b.HasIndex("ScholarshipEducationLevelId");

                    b.HasIndex("ScholarshipSchoolId");

                    b.ToTable("ScholarshipFeeStructure");
                });

            modelBuilder.Entity("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseHiLo("scholarship_interest_hilo");

                    b.Property<string>("Interest")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ScholarshipInterest");
                });

            modelBuilder.Entity("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseHiLo("scholarship_hilo");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("AvailableSlots")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxSlotThreshold")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("OnReapply")
                        .HasColumnType("bit");

                    b.Property<string>("PictureFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReslotThreshold")
                        .HasColumnType("int");

                    b.Property<int>("ScholarshipCurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("ScholarshipDurationId")
                        .HasColumnType("int");

                    b.Property<int>("ScholarshipEducationLevelId")
                        .HasColumnType("int");

                    b.Property<int>("ScholarshipInterestId")
                        .HasColumnType("int");

                    b.Property<int>("ScholarshipLocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScholarshipCurrencyId");

                    b.HasIndex("ScholarshipDurationId");

                    b.HasIndex("ScholarshipEducationLevelId");

                    b.HasIndex("ScholarshipInterestId");

                    b.HasIndex("ScholarshipLocationId");

                    b.ToTable("Scholarship");
                });

            modelBuilder.Entity("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseHiLo("scholarship_location_hilo");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("ScholarshipLocation");
                });

            modelBuilder.Entity("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipSchool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseHiLo("scholarship_school_hilo");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("ScholarshipLocationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScholarshipLocationId");

                    b.ToTable("ScholarshipSchool");
                });

            modelBuilder.Entity("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipCourse", b =>
                {
                    b.HasOne("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipDuration", "ScholarshipDuration")
                        .WithMany()
                        .HasForeignKey("ScholarshipDurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScholarshipDuration");
                });

            modelBuilder.Entity("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipFeeStructure", b =>
                {
                    b.HasOne("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipCourse", "ScholarshipCourse")
                        .WithMany()
                        .HasForeignKey("ScholarshipCourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipCurrency", "ScholarshipCurrency")
                        .WithMany()
                        .HasForeignKey("ScholarshipCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipDuration", "ScholarshipDuration")
                        .WithMany()
                        .HasForeignKey("ScholarshipDurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipEducationLevel", "ScholarshipEducationLevel")
                        .WithMany()
                        .HasForeignKey("ScholarshipEducationLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipSchool", "ScholarshipSchool")
                        .WithMany()
                        .HasForeignKey("ScholarshipSchoolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ScholarshipCourse");

                    b.Navigation("ScholarshipCurrency");

                    b.Navigation("ScholarshipDuration");

                    b.Navigation("ScholarshipEducationLevel");

                    b.Navigation("ScholarshipSchool");
                });

            modelBuilder.Entity("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipItem", b =>
                {
                    b.HasOne("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipCurrency", "ScholarshipCurrency")
                        .WithMany()
                        .HasForeignKey("ScholarshipCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipDuration", "ScholarshipDuration")
                        .WithMany()
                        .HasForeignKey("ScholarshipDurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipEducationLevel", "ScholarshipEducationLevel")
                        .WithMany()
                        .HasForeignKey("ScholarshipEducationLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipInterest", "ScholarshipInterest")
                        .WithMany()
                        .HasForeignKey("ScholarshipInterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipLocation", "ScholarshipLocation")
                        .WithMany()
                        .HasForeignKey("ScholarshipLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScholarshipCurrency");

                    b.Navigation("ScholarshipDuration");

                    b.Navigation("ScholarshipEducationLevel");

                    b.Navigation("ScholarshipInterest");

                    b.Navigation("ScholarshipLocation");
                });

            modelBuilder.Entity("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipSchool", b =>
                {
                    b.HasOne("Microsoft.Fee.Services.Scholarship.API.Model.ScholarshipLocation", "ScholarshipLocation")
                        .WithMany()
                        .HasForeignKey("ScholarshipLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScholarshipLocation");
                });
#pragma warning restore 612, 618
        }
    }
}
